package org.iptime.shtelo.vosh.client.forms;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import org.iptime.shtelo.vosh.client.utils.Constants;
import org.iptime.shtelo.vosh.client.web.Client;

import javax.swing.*;
import java.awt.*;

public class ChatForm extends JFrame {
    private JButton quitButton;
    private JTextArea textArea;
    private JPanel panel;
    private JTextField textField;
    private JButton sendButton;
    private JLabel usernameLabel;
    private Client client;

    public ChatForm() {
        quitButton.addActionListener(e -> {
            if (client != null)
                client.send("QUIT");
            dispose();
            client.setConnected(false);
        });
        sendButton.addActionListener(e -> send());
        textField.addActionListener(e -> send());
    }

    public JLabel getUsernameLabel() {
        return usernameLabel;
    }

    private void send() {
        if (!textField.getText().equals("")) {
            client.send("CHAT " + textField.getText());
            textField.setText("");
        }
    }

    public void setClient(Client client) {
        this.client = client;
        usernameLabel.setText(client.getName());
    }

    public void start() {
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(Constants.DEFAULT_WIDTH, Constants.DEFAULT_HEIGHT);
        setMinimumSize(new Dimension(300, 500));
        setLocationRelativeTo(null);

        add(panel);

        setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel = new JPanel();
        panel.setLayout(new GridLayoutManager(3, 3, new Insets(10, 10, 10, 10), -1, -1));
        textArea = new JTextArea();
        textArea.setEditable(false);
        panel.add(textArea, new GridConstraints(1, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        quitButton = new JButton();
        quitButton.setText("종료");
        panel.add(quitButton, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textField = new JTextField();
        panel.add(textField, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        sendButton = new JButton();
        sendButton.setText("전송");
        panel.add(sendButton, new GridConstraints(2, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        usernameLabel = new JLabel();
        usernameLabel.setText("Username");
        panel.add(usernameLabel, new GridConstraints(0, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }

    public void addLog(String with, String direction, String message) {
        textArea.append(with + " " + direction + " " + message + "\n");
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
    }
}
