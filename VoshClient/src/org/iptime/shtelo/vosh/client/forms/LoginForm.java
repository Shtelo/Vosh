package org.iptime.shtelo.vosh.client.forms;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import org.iptime.shtelo.vosh.client.utils.Constants;
import org.iptime.shtelo.vosh.client.web.Client;

import javax.sound.sampled.LineUnavailableException;
import javax.swing.*;
import java.awt.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.net.ConnectException;
import java.net.Socket;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class LoginForm extends JFrame {
    private JTextField ipTextField;
    private JPanel panel;
    private JTextField nicknameTextField;
    private JButton connectButton;

    private boolean connecting;

    public LoginForm() {
        connecting = false;

        connectButton.addActionListener(e -> connect());
        ipTextField.addActionListener(e -> connect());
        nicknameTextField.addActionListener(e -> connect());
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                if (connecting)
                    dispose();
                else
                    System.exit(0);
            }
        });
    }

    private void connect() {
        connecting = true;

        String host;
        int port = Constants.DEFAULT_PORT;
        if (ipTextField.getText().indexOf(':') == -1) {
            host = ipTextField.getText();
        } else {
            String[] tmp = ipTextField.getText().split(":");
            host = tmp[0];
            try {
                port = Integer.parseInt(tmp[1]);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "서버 IP가 올바르지 않습니다!");
                return;
            }
        }

        String name = nicknameTextField.getText();
        Pattern pattern = Pattern.compile("[0-9A-Za-z_]{3,16}");
        Matcher matcher = pattern.matcher(name);
        if (!matcher.matches()) {
            JOptionPane.showMessageDialog(this, "닉네임이 올바르지 않습니다!\n" +
                    "마인크래프트 계정의 닉네임을 입력해주세요!");
            return;
        }

        Socket socket;
        ChatForm chatForm;
        Client client;
        try {
            socket = new Socket(host, port);
            chatForm = new ChatForm();
            client = new Client(name, socket, host, port, chatForm);
            chatForm.setClient(client);
        } catch (ConnectException e) {
            JOptionPane.showMessageDialog(this, "서버가 열려있지 않습니다!\n" + e.getMessage());
            return;
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "알 수 없는 이유로 서버에 접속할 수 없습니다!\n" + e.getMessage());
            return;
        } catch (LineUnavailableException e) {
            e.printStackTrace();
            return;
        }

        setVisible(false);
        dispose();
        dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
        chatForm.start();
    }

    public void start() {
        setTitle(Constants.PROJECT_NAME);
        setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        setSize(Constants.DEFAULT_WIDTH, Constants.DEFAULT_HEIGHT);
        setMinimumSize(new Dimension(500, 500));
        setLocationRelativeTo(null);

        add(panel);

        setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel = new JPanel();
        panel.setLayout(new GridLayoutManager(6, 3, new Insets(10, 10, 10, 10), -1, -1));
        ipTextField = new JTextField();
        panel.add(ipTextField, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("서버 IP");
        panel.add(label1, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        nicknameTextField = new JTextField();
        panel.add(nicknameTextField, new GridConstraints(5, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("닉네임");
        panel.add(label2, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        panel.add(spacer1, new GridConstraints(3, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        connectButton = new JButton();
        connectButton.setHideActionText(false);
        connectButton.setText("접속");
        panel.add(connectButton, new GridConstraints(4, 2, 2, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        panel.add(spacer2, new GridConstraints(0, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("Vosh");
        panel.add(label3, new GridConstraints(1, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setText("Shtelo Collaboration Series II");
        panel.add(label4, new GridConstraints(2, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }

}
